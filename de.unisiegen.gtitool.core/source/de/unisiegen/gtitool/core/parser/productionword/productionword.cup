/**
 * The cup file of the production word parser.
 * 
 * @author Christian Fehler
 * @version $Id$
 */
import de.unisiegen.gtitool.core.entities.DefaultNonterminalSymbol;
import de.unisiegen.gtitool.core.entities.DefaultProductionWord;
import de.unisiegen.gtitool.core.entities.ProductionWord;
import de.unisiegen.gtitool.core.entities.ProductionWordMember;
import de.unisiegen.gtitool.core.exceptions.nonterminalsymbol.NonterminalSymbolException;
import de.unisiegen.gtitool.core.parser.ParserOffset;
import de.unisiegen.gtitool.core.parser.exceptions.ParserException;


/************
 * Terminal *
 ************/
 
terminal String					MEMBER;


/****************
 * Non Terminal *
 ****************/
 
non terminal ProductionWordMember		member;
non terminal ProductionWordMember[]		member_list;
non terminal ProductionWord				production_word;


/*********
 * Error *
 *********/

non terminal 					epsilon;


/******************
 * ProductionWord *
 ******************/

production_word					::= member_list:ml
									{:
									   RESULT = new DefaultProductionWord(ml);
									   RESULT.setParserOffset(new ParserOffset(mlleft,mlright));
									:}
								|	epsilon:e
									{:
									   RESULT = new DefaultProductionWord();
									   RESULT.setParserOffset(new ParserOffset(eleft,eright));
									:}
								;

member							::= MEMBER:m
									{:
									   try
									   {
									     RESULT = new DefaultNonterminalSymbol(m);
									   }
									   catch (NonterminalSymbolException exc)
									   {
									     ParserException.throwSymbolException(mleft, mright, m);
									   }
									   RESULT.setParserOffset(new ParserOffset(mleft,mright));
									:}
								;

member_list						::= member_list:ml member:m
								    {:
								       RESULT = new DefaultNonterminalSymbol[ml.length + 1];
									   System.arraycopy(ml, 0, RESULT, 0, ml.length);
									   RESULT[ml.length] = m;
								    :}
								|	member:m
									{:
									   RESULT = new ProductionWordMember[] { m };
									:}
								;

epsilon							::= /* epsilon */
									{: :}
								;