/**
 * The cup file of the stack parser.
 * 
 * @author Christian Fehler
 * @version $Id$
 */
import de.unisiegen.gtitool.core.entities.DefaultStack;
import de.unisiegen.gtitool.core.entities.DefaultSymbol;
import de.unisiegen.gtitool.core.entities.Stack;
import de.unisiegen.gtitool.core.entities.Symbol;
import de.unisiegen.gtitool.core.exceptions.symbol.SymbolException;
import de.unisiegen.gtitool.core.parser.ParserOffset;
import de.unisiegen.gtitool.core.parser.exceptions.ParserException;


/************
 * Terminal *
 ************/
 
terminal String				SYMBOL;


/****************
 * Non Terminal *
 ****************/
 
non terminal Symbol			symbol;
non terminal Symbol[]		symbol_list;
non terminal Stack			stack;


/*********
 * Error *
 *********/

non terminal 				epsilon;


/*********
 * Stack *
 *********/

stack							::= symbol_list:sl
									{:
									   RESULT = new DefaultStack();
									   for (int i = sl.length - 1; i >= 0; i--)
									   {
									     RESULT.push(sl[i]);
									   }
									   RESULT.setParserOffset(new ParserOffset(slleft,slright));
									:}
								|	epsilon:e
									{:
									   RESULT = new DefaultStack();
									   RESULT.setParserOffset(new ParserOffset(eleft,eright));
									:}
								;

symbol							::= SYMBOL:s
									{:
									   RESULT = new DefaultSymbol(s);
									   RESULT.setParserOffset(new ParserOffset(sleft,sright));
									:}
								;

symbol_list						::= symbol_list:sl symbol:s
								    {:
								       RESULT = new Symbol[sl.length + 1];
									   System.arraycopy(sl, 0, RESULT, 0, sl.length);
									   RESULT[sl.length] = s;
								    :}
								|	symbol:s
									{:
									   RESULT = new Symbol[] { s };
									:}
								;

epsilon							::= /* epsilon */
									{: :}
								;